#!/usr/bin/env perl
use strict;
use warnings;

use Getopt::Std;

use CXGN::DB::Connection;
use CXGN::Tools::PgCatalog qw/table_info/;

use constant usage => "$0:

Usage: $0 [OPTIONS] DATABASE DIRECTORY
Options:
-h		What you see is what you get (this message).
-q              be quiet
";

our %opts = ();

# Program begins.
getopts ("hq", \%opts);
if ($opts{h}) {
  print usage;
  exit (0);
}
my $schema = shift;
my $schema_esc = $schema;
$schema_esc =~ s/_/\\_/g;

my $dir = shift;
die ("$0: no database name supplied.")
  unless $schema;
die ("$0: no directory specified.")
  unless $dir;


my $dbh = CXGN::DB::Connection->new({ config => CXGN::Config->load, dbschema => $schema })
  or die ("$0: can't get a database handle.");

my $dbclass = join "", map { (length($_) < 4) ? uc($_) : ucfirst($_); } split "_", $schema;

system ("mkdir -p $dir/$dbclass");

# get a list of tables without their schema names
# also remove any "quotation marks" around the table names
# put these back in if needed with $dbh->quote_identifier
my @tables = map {/([^\."]+)"?$/} $dbh->tables(undef, $schema_esc);

foreach my $table (@tables) {
  my %table_info = table_info($dbh,$schema,$table);

  my $modulename = join "", map { ucfirst($_); } split "_", $table;
  warn "generating $schema.$table -> $dbclass/$modulename.pm\n" unless $opts{q};

  my $module_file = "$dir/$dbclass/$modulename.pm";
  if( -f $module_file ) {
    print "$modulename already exists, skipping.\n";
  }
  open my $fh, '>', $module_file
    or die( "$0: $!" );

  my $primary_keys = join "\n",map {"      $_"} @{$table_info{primary}};

  my $cols = join "\n",map {"      $_"} @{$table_info{columns}};
  my $sequence_definition = $table_info{sequence} ? "__PACKAGE__->sequence( '$table_info{sequence}' );" : '';
  my $sequence = $table_info{sequence} || 'none';

  print $fh <<EOP;
package CXGN::CDBI::Auto::${dbclass}::${modulename};
# This class is autogenerated by cdbigen.pl.  Any modification
# by you will be fruitless.

=head1 DESCRIPTION

CXGN::CDBI::Auto::${dbclass}::${modulename} - object abstraction for rows in the $schema.$table table.

Autogenerated by cdbigen.pl.

=head1 DATA FIELDS

  Primary Keys:
$primary_keys

  Columns:
$cols

  Sequence:
      $sequence

=cut

use base 'CXGN::CDBI::Class::DBI';
__PACKAGE__->table( '$schema.$table' );

our \@primary_key_names =
    qw/
$primary_keys
      /;

our \@column_names =
    qw/
$cols
      /;

__PACKAGE__->columns( Primary => \@primary_key_names, );
__PACKAGE__->columns( All     => \@column_names,      );
$sequence_definition

=head1 AUTHOR

cdbigen.pl

=cut

###
1;#do not remove
###
EOP

  close ($fh);
}
print "$dbclass\n";

$dbh->disconnect(42);
